/*
Copyright 2020 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package attestlib

import "errors"

// Signer contains methods to create a signed Attestation.
type Signer interface {
	// CreateAttestation creates an Attestation whose signature is generated by
	// signing the given payload with the private key. For PGP and PKIX, `payload`
	// should be the raw payload data. For JWT, `payload` should be a serialized
	// but unsigned token.
	CreateAttestation(payload []byte) (*Attestation, error)
}

type pkixSigner struct {
	PrivateKey         []byte
	PublicKeyID        string
	SignatureAlgorithm SignatureAlgorithm
}

type jwtSigner struct {
	PrivateKey         []byte
	PublicKeyID        string
	SignatureAlgorithm SignatureAlgorithm
}

// NewPkixSigner creates a Signer interface for PKIX Attestations. `privateKey`
// contains the PEM-encoded private key. `publicKeyID` is the ID of the public
// key that can verify the Attestation signature.
func NewPkixSigner(privateKey []byte, publicKeyID string, alg SignatureAlgorithm) (Signer, error) {
	return &pkixSigner{
		PrivateKey:         privateKey,
		PublicKeyID:        publicKeyID,
		SignatureAlgorithm: alg,
	}, nil
}

// NewJwtSigner creates a Signer interface for JWT Attestations. `publicKeyID`
// is the ID of the public key that can verify the Attestation signature.
// TODO: Explain formatting of JWT private keys.
func NewJwtSigner(privateKey []byte, publicKeyID string, alg SignatureAlgorithm) (Signer, error) {
	return &jwtSigner{
		PrivateKey:         privateKey,
		PublicKeyID:        publicKeyID,
		SignatureAlgorithm: alg,
	}, nil
}

// CreateAttestation creates a signed PKIX Attestation. See Signer for more details.
func (s *pkixSigner) CreateAttestation(payload []byte) (*Attestation, error) {
	return nil, errors.New("pkix attestations not implemented")
}

// CreateAttestation creates a signed JWT Attestation. See Signer for more details.
func (s *jwtSigner) CreateAttestation(payload []byte) (*Attestation, error) {
	return nil, errors.New("jwt attestations not implemented")
}
